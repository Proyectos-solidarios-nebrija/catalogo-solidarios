---
import ChevronDown from '@components/icons/ChevronDown.astro'
import { courses } from '@constants/courses'
import { useTranslations, getLangFromUrl } from 'src/i18n/utils'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<header>
  <h1>{t('header.title')}</h1>
  <div class="header-content">
    <p>{t('header.desc')}</p>
    <span>
      {
        courses.map((course, idx) => (
          <>
            <strong>{course}</strong>
            {idx < courses.length - 1 && <span> | </span>}
          </>
        ))
      }
    </span>
    <div class="header-content-scroll">
      <p>{t('header.scroll')}</p>
      <ChevronDown />
    </div>
  </div>
</header>

<style>
  header {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 25px;
  }

  h1 {
    font-size: 12rem;
    font-weight: 400;
    text-align: center;
    max-width: 10ch;
    margin: 0;
  }

  .header-content {
    display: flex;
    flex-direction: column;
    text-align: center;
    align-items: center;
    gap: 25px;
  }

  p {
    margin: 0;
    font-size: 3rem;
    max-width: 600px;
    text-wrap: pretty;
    width: 90%;
    text-align: center;
  }

  span {
    font-size: 3rem;
  }

  strong {
    text-transform: uppercase;
    font-weight: 600;
  }

  .header-content-scroll {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 15px;
  }

  .header-content-scroll :global(svg) {
    width: 8rem;
    height: 8rem;
    animation: falling infinite 2s;
  }

  @media (width <= 800px) {
    p {
      max-width: 400px;
    }

    .header-content {
      gap: 15px;
    }
  }

  @keyframes falling {
    0% {
      transform: translateY(0px);
      opacity: 1;
    }

    100% {
      transform: translateY(20px);
      opacity: 0;
    }
  }
</style>
