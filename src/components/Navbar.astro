---
import Moon from '@components/icons/Moon.astro'
import LanguagePicker from '@components/LanguagePicker.astro'
import logoNebrija from '@images/assets/logoNebrija.png'
import { Image } from 'astro:assets'
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations
} from 'src/i18n/utils'
import Sun from './icons/Sun.astro'

const currentLang = getLangFromUrl(Astro.url)
const t = useTranslations(currentLang)
const translatePath = useTranslatedPath(currentLang)
---

<nav>
  <a href={translatePath('/')} id="link-home">
    <Image src={logoNebrija} alt={t('alt.nebrijaLogoImg')} width={70} />
  </a>
  <ul class="links">
    <li>
      <a href={translatePath(`/#${t('nav.projects')}`)}>{t('nav.projects')}</a>
    </li>
    <li>
      <a href={translatePath(`/#${t('nav.gallery')}`)}>{t('nav.gallery')}</a>
    </li>
    <li>
      <a href={translatePath('/quienes-somos')}>{t('nav.whoWeAre')}</a>
    </li>
    <li class="config">
      <button id="btn-theme-toggler">
        <span id="theme-toggler-dark-icon">
          <Moon />
        </span>
        <span id="theme-toggler-light-icon">
          <Sun />
        </span>
      </button>
      <LanguagePicker />
    </li>
  </ul>
</nav>

<script>
  const LOCAL_STORAGE_THEME_KEY = 'theme'

  const THEMES = {
    dark: 'dark',
    light: 'light'
  }

  const setThemePreference = (html, theme) => {
    if (theme === THEMES.dark) {
      localStorage.setItem(LOCAL_STORAGE_THEME_KEY, THEMES.dark)
      html.classList.add(THEMES.dark)
    } else {
      localStorage.setItem(LOCAL_STORAGE_THEME_KEY, THEMES.light)
      html.classList.remove(THEMES.dark)
    }
  }

  document.addEventListener('astro:after-swap', () => {
    const selectedTheme = localStorage.getItem(LOCAL_STORAGE_THEME_KEY)
    const html = document.querySelector('html') as HTMLElement

    const systemSettingDark = window.matchMedia('(prefers-color-scheme: dark)')

    // Set up the select theme
    if (selectedTheme === THEMES.dark) {
      html.classList.add('dark')
    } else {
      // Config the preferred theme
      if (systemSettingDark) {
        setThemePreference(html, THEMES.dark)
      } else {
        setThemePreference(html, THEMES.light)
      }
    }
  })

  document.addEventListener('astro:page-load', () => {
    const btnThemeToggler = document.querySelector(
      '#btn-theme-toggler'
    ) as HTMLButtonElement

    const html = document.querySelector('html') as HTMLElement

    btnThemeToggler.addEventListener('click', () => {
      const currentTheme = localStorage.getItem(LOCAL_STORAGE_THEME_KEY)
      const isDarkTheme = currentTheme === THEMES.dark

      if (isDarkTheme) {
        setThemePreference(html, THEMES.light)
      } else {
        setThemePreference(html, THEMES.dark)
      }
    })
  })
</script>

<style>
  nav {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    margin-top: 25px;
    margin-bottom: 100px;
  }

  #link-home {
    transition: transform 0.2s ease-in-out;
  }

  #link-home:hover {
    transform: scale(1.1);
  }

  #link-home:active {
    transform: scale(0.9);
  }

  ul {
    list-style: none;
    font-size: 3rem;
    display: flex;
    text-align: end;
    flex-direction: column;
    gap: 15px;
    padding: 0;
  }

  .links :global(a) {
    text-decoration: none;
    position: relative;
  }

  .links :global(a):hover::before {
    transform-origin: 0% 50%;
    transform: scale3d(1, 1, 1);
  }

  .links :global(a)::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 1px;
    background: currentColor;
    top: 100%;
    left: 0;
    pointer-events: none;
    transform-origin: 100% 50%;
    transform: scale3d(0, 1, 1);
    transition: transform 0.3s;
  }

  .config {
    display: flex;
    gap: 15px;
    justify-content: end;
    align-items: center;
  }

  img {
    width: 60px;
    height: auto;
  }

  html[class='dark'] img {
    filter: invert(1);
  }

  html #theme-toggler-light-icon {
    display: none;
  }

  html[class='dark'] #theme-toggler-dark-icon {
    display: none;
  }

  html[class='dark'] #theme-toggler-light-icon {
    display: block;
  }

  html #theme-toggler-dark-icon {
    display: block;
  }

  button {
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
  }

  .config :global(svg) {
    width: 3rem;
    height: 3rem;
  }

  #btn-theme-toggler {
    border: none;
    cursor: pointer;
  }

  @media (width <= 800px) {
    ul {
      gap: 10px;
    }

    img {
      width: 40px;
    }
  }
</style>
